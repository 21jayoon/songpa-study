# 오늘 강의 진도 Today's lecture
# JDBC (Engine : IntelliJ)
# From CHP01-connection To CHAP03-crud

# 컴퓨터 사용 팁! (단축키)
# 작은 화면인 상태에서 WINDOW + 좌우 방향키 누르면
# 왼 혹은 오 양 사이드로 맞춤 정렬된다.
# 출처 : 스터디팀원 열익님

# Debugging Log
package com.ohgiraffers.section2.preparedstatement;
...
import static com.ohgiraffers.common.JDBCTemplate.close;
import static com.ohgiraffers.common.JDBCTemplate.getConnection;

public class Application6 {
    public static void main(String[] args) {
        /*XML 파일에 query문을 미리 저장해놓고 불러와서 쓰자*/
        Connection con = getConnection();
        PreparedStatement pstmt = null;
        ResultSet rset = null;

        EmployeeDTO row = null;
        List<EmployeeDTO> empList = null;

        Scanner sc = new Scanner(System.in);
        System.out.print("조회할 이름의 성을 입력하세요 : ");
        String empName = sc.nextLine();

        Properties prop = new Properties();
        try {
            prop.loadFromXML(new FileInputStream("src/main/java/com/ohgiraffers/section2/preparedstatement/employee-query.xml"));

            String query = prop.getProperty("selectEmpByFamilyName");
            System.out.println(query);
            
        } catch (IOException e) {
            throw new RuntimeException(e);
        }  finally {
            close(pstmt);
            close(rset);
            close(con);
        }
    }
}
# Warning Message :
# Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.sql.Statement.close()" because "stmt" is null
# 	at com.ohgiraffers.common.JDBCTemplate.close(JDBCTemplate.java:49)
# 	at com.ohgiraffers.section2.preparedstatement.Application6.main(Application6.java:72) // close(pstmt);

# 	at com.ohgiraffers.common.JDBCTemplate.close(JDBCTemplate.java:49)
# go to "src/main/java/com/ohgiraffers/common/JDBCTemplate" and check the line 49
public static void close(Statement stmt) { // statement를 닫아주는 메소드
        try {
            if(stmt != null && !stmt.isClosed()){
                stmt.close();
            }
            stmt.close(); // line 49
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
    
# Found another stmt.close(); out of the if statement >>> deleted
public static void close(Statement stmt) {
        try {
            if(stmt != null && !stmt.isClosed()){
                stmt.close();
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
    
# Found another code that can cause errors below
public static void close(ResultSet rset) { // ResultSet를 닫아주는 메소드
        try {
            if(rset != null && !rset.isClosed()){
                rset.close();
            }
            rset.close(); // HERE!!!
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
# DELETED
public static void close(ResultSet rset) {
        try {
            if(rset != null && !rset.isClosed()){
                rset.close();
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

# Return to Application6
System.out.println(query); //Execute this line 38

# Execution Result
> Task :com.ohgiraffers.section2.preparedstatement.Application6.main()
조회할 이름의 성을 입력하세요 : 김

        SELECT E.*
          FROM EMPLOYEE E
         WHERE E.EMP_NAME LIKE CONCAT(?, '%')
    
BUILD SUCCESSFUL in 4s
2 actionable tasks: 1 executed, 1 up-to-date
오후 2:07:31: Execution finished ':com.ohgiraffers.section2.preparedstatement.Application6.main()'.



# 데이터모델링 실습 3
# 업무기술서보고 엔티티 도출 후
# Da# Modeler5로 엔티티 실제 제작까지 완료
# Notion 팀페이지에 결과 공유
# https://www.notion.so/1-3-1f51eb8b52ff81a8a839f33fdfb567ca?pvs=4

# Study : 데이터모델링 시 관계선의 차이에 대해 공부
# https://github.com/copilot/share/c203411e-48a4-8804-a940-c00f801d4958
# Notion에 정리 
# https://www.notion.so/Difference-of-Optional-Mandatory-Identify-in-1-M-relationship-line-1fafc892a16f8047b384d61ca224b384?pvs=4

# Programmers 입문 한 문제 풀기 : Day3 중앙값 구하기 Find the median in array
# Q : 중앙값은 어떤 주어진 값들을 크기의 순서대로 정렬했을 때 가장 중앙에 위치하는 값을 의미합니다.
# 정수 배열 array가 매개변수로 주어질 때, 중앙값을 return 하도록 solution 함수를 완성해보세요.
import java.util.Arrays;

class Solution {
    public int solution(int[] array) {
        int sum = 0;
        for (int i = 0; i < array.length; i++) {
            sum += i;
        }        
        int j = array.length;
        Arrays.sort(array);
    
        return array[sum / j];
    }
}
