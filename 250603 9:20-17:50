# 오늘 배운 내용 Today's lecture
# Spring

# Spring이란?
# 자바의 웹 프레임 워크. 자바언어를 기반으로 사용 (자바로 다양한 어플리케이션을 만들기 위한 프로그래밍 툴)
# Spring 사용하면 중복코드의 사용률을 줄여주고 비지니스 로직을 더 간단하게 하는 것이 가능해진다

# 프레임워크(Frame Work)란?
# 소프트웨어 개발에 있어서 하나의 뼈대의 역할을 하는 것.(자주 쓰이는 기능을 한 곳에 모아 놓은 클래스들의 집합.)
# 프레임워크 = 도구상자
# 출처 : 강지영(2022, 7월 23일). Java 기초 문법, Spring 기초 사용법. https://velog.io/@piczo/Java-%EA%B8%B0%EC%B4%88-%EB%AC%B8%EB%B2%95-Spring-%EA%B8%B0%EC%B4%88-%EC%82%AC%EC%9A%A9%EB%B2%95


# CHAPTER01 - IOC CONTAINER
# 컨테이너? : 컨테이너는 보통 객체Instance의 생명주기를 관리, 생성된 인스턴스들에게 추가적인 기능을 제공하도록 하는 것
# 개발자가 아닌 컨테이너가 인스턴스 생명주기(인스턴스 생성~소멸) 관리를 대신 해준다.
# 객체관리 주체가 프레임워크(Container)가 되기 때문에 개발자는 로직에 집중할 수 있는 장점이 있습니다.

# 스프링 프레임워크도 객체를 생성 & 관리 & 책임지고 의존성을 관리해주는 컨테이너가 있는데,
# 그것이 바로 IoC 컨테이너(=스프링 컨테이너)다.
# 출처: https://dev-coco.tistory.com/80 [슬기로운 개발생활:티스토리]

# 다음 코드에서 IOC container의 역할 : 
# Spring IoC 컨테이너(ApplicationContext)는
# Bean(객체)의 생성, 설정, 생명주기 관리 등을 담당합니다.
# 우리가 직접 new 키워드로 객체를 생성하지 않고,
# XML(혹은 어노테이션) 설정에 따라 Spring이 객체를 만들어 관리해줍니다.

# XML 설정과 Bean 생성 과정
# XML 파일
# <bean id="member" class="org.common.MemberDTO">
#    <constructor-arg index="0" value="1"/>
#    <constructor-arg name="id" value="user01"/>
#    <constructor-arg index="2"><value>pass01</value></constructor-arg>
#    <constructor-arg name="name"><value>HongGilDong</value></constructor-arg>
# </bean>
# Bean id="member" : 이 객체를 나중에 "member"라는 이름으로 꺼낼 수 있습니다.
# class="org.common.MemberDTO" : 이 Bean이 어떤 클래스의 인스턴스인지 지정합니다.
# constructor-arg : 생성자에 넘길 값들을 지정합니다.

# 즉, Java에서 바로 아래 코드로 객체를 생성한 것과 동일하게,
# new MemberDTO(1, "user01", "pass01", "HongGilDong");
# XML에서 "member"라는 id로 이 객체를 IoC 컨테이너가 실제로 생성해서 등록해 둡니다.
# 이후 코드에서 context.getBean("member")로 꺼내 쓸 수 있습니다.
# 출처 : https://github.com/copilot/share/006a428e-09a0-8422-a942-524e809f0949

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
  <!-- 스프링 부트(설정 자동화, 톰캣이 내장되어 있음)와 스프링 프레임워크는 같다
    스프링 부트로 개발하는 회사가 많긴 하지만
    아직 스프링 프레임워크 등을 사용하고 있는 회사들도 있기 때문에 둘 다 배울 예정-->

    <bean id="member" class="org.common.MemberDTO">
<!--   이 <bean id="member"></bean>코드는 자바에서 MemberDTO member = new MemberDTO(1, "user02",...)해주는 것과 같다-->
           <constructor-arg index="0" value="1"/>
<!--        DTO의 0번째 인덱스(=sequence)에 숫자 1을 값으로 넣어주겠다-->
           <constructor-arg name="id" value="user01"/>
<!--        DTO에 있는 이름이 id인 인덱스에 "user01"을 값으로 넣어주겠다-->
           <constructor-arg index="2"><value>pass01</value></constructor-arg>
           <constructor-arg name="name"><value>HongGilDong</value></constructor-arg>
       </bean>
</beans>
