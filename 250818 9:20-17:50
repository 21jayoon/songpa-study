# https://www.samsungsds.com/kr/insights/python-web-frontend-framework.html

Python은 전통적인 서버 프레임워크 언어로 쓰였고, 백엔드 영역에 갇혀있었다.
따라서 프론트엔드(클라이언트 측) 코드를 만들기 위한 용도로 파이썬을 쓰기 시작한 것은 오래된 일이 아니다.
최근 일부 프로젝트에서 파이썬을 자바스크립트로 트랜스파일*하거나 
웹 어셈블리를 통해 프론트엔드에서 파이썬을 실행**하는 방법을 시도했지만, 이 방법은 투박하고 원시적이다.
이 같은 방식 대신에 새로운 파이썬 웹 프레임워크 제품***군을 사용하면 
백엔드에서 프로그래밍방식으로 프론트엔드 코드를 생성****하는
선언적인 파이썬 코드$를 작성할 수 있다.
(= 파이썬 객체를 사용해 HTML 엔티티와 해당 자바스크립트 기반 동작을 기술한 다음, 
클라이언트에 제공될 때 프레임워크가 이런 객체를 자동으로 생성하게끔 만들 수 있다.)

이런 패러다임을 따르는$$ 파이썬용 웹 프레임워크 3가지를 소개한다.
3가지 모두 백엔드 파이썬 코드로 HTML, CSS, 자바스크립트 등 
프론트엔드 코드를 설명할 수 있도록 허용하고,
파이썬 객체 모델을 통해 프론트엔드 객체를 허용$$$할 수 있다.

1. 앤빌
첫 번째 장점: 파이썬만으로 웹/앱 빌드 가능
파이썬 코드를 작성하거나 드래그 앤 드롭 로우코드 툴로
인터랙티브한 자바스크립트 기반 프론트엔드$$$$와 
파이썬 기반 백엔드를 갖춘 완전한 웹 애플리케이션을 만들 수 있다.

앤빌 클라우드 서비스와 오픈소스인 앤빌 런타임을 통해 접근(=이용)할 수 있으며
오픈소스 앤빌 런타임은 시각화 빌드 툴이 있진 않지만
직접 작성한 코드를 사용해 앤빌 애플리케이션을 빌드하고 실행할 수 있다.

앤빌 애플리케이션은 
UI, 
파이썬에서 자바스크립트로 트랜스파일된 클라이언트 측 코드, 
서버 측 파이썬 코드
3가지 요소로 구성된다.

기본적으로 앤빌 사이트의 모든 자바스크립트는 자동으로 생성되지만, 

*Transfile : 
** 웹 어셈블리를 통해 FE에서 파이썬을 실행 : 
*** Web Framework : 
**** 백엔드에서 프로그래밍방식으로 프론트엔드 코드를 생성 : 
$ 선언적인 파이썬 코드 :
$$ 패러다임을 따르다 : 
$$$ 파이썬 객체 모델을 통해 프론트엔드 객체를 허용 : 
$$$$ 인터랙티브한 프론트엔드 : 
