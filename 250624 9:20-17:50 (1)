# JPQL 개념 정리
JPQL은 엔터티 객체를 중심으로 개발할 수 있는 객체 지향 쿼리이다. SQL보다 간결하며 특정 DBMS에 의존하지
않는다. 방언을 통해 해당 DBMS에 맞는 SQL을 실행하게 된다. JPQL은 find() 메소드를 통한 조회와 다르게 항
상 데이터베이스에 SQL을 실행해서 결과를 조회한다.

# 1-1. 기본 문법
SELECT , UPDATE , DELETE 등의 키워드 사용은 SQL과 동일하다.
INSERT 는 persist() 메소드를 사용하면 된다. 

키워드는 대소문자를 구분하지 않지만, 엔터티와 속성은 대소문자를 구분함에 유의한다.
엔터티 별칭을 필수로 사용해야 하며 별칭 없이 작성하면 에러가 발생한다.

JPQL 사용 방법은 다음과 같다.
1. 작성한 JPQL(문자열)을 entityManager.createQuery() 메소드를 통해 쿼리 객체로 만든다.
# String jpql = "SELECT m.menuName FROM Section01Menu as m WHERE m.menuCode = 8";
# TypedQuery<String> query = manager.createQuery(jpql, String.class);

2. 쿼리 객체는 TypedQuery , Query 두 가지가 있다.
a. TypedQuery : 반환할 타입을 명확하게 지정하는 방식일 때 사용하며 쿼리 객체의 메소드 실행 결과로 지
정한 타입이 반환 된다.
b. Query : 반환할 타입을 명확하게 지정할 수 없을 때 사용하며 쿼리 객체 메소드의 실행 결과로 Object 또
는 Object[]이 반환 된다.
# String jpql = "SELECT m.menuName FROM Section01Menu as m WHERE m.menuCode = 8";
# Query query = manager.createQuery(jpql); //결과 값의 타입을 명시하지 않음

3. 쿼리 객체에서 제공하는 메소드 getSingleResult() 또는 getResultList() 를 호출해서 쿼리를 실행하고 데이터
베이스를 조회한다.
a. getSingleResult() : 결과가 정확히 한 행일경우 사용하며 없거나 많으면 예외가 발생한다.
#  String resultMenuName = query.getSingleResult();

b. getResultList() : 결과가 2행 이상일 경우 사용하며 컬렉션을 반환한다. 결과가 없으면 빈 컬렉션을 반환
한다.
